<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Configuring interceptors based on URI -->
	<!-- <interceptors> <interceptor> <mapping path="/**" /> <beans:bean class="com.siaam.auth.interceptor.SampleInterceptor"></beans:bean> 
		</interceptor> </interceptors> -->

	<beans:bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<beans:property name="order" value="1" />

		<beans:property name="contentNegotiationManager">
			<beans:bean
				class="org.springframework.web.accept.ContentNegotiationManager">
				<beans:constructor-arg>
					<beans:bean
						class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
						<beans:constructor-arg>
							<beans:map>
								<beans:entry key="json" value="application/json" />
								<!-- <beans:entry key="xml" value="application/xml" /> -->
							</beans:map>
						</beans:constructor-arg>
					</beans:bean>
				</beans:constructor-arg>
			</beans:bean>
		</beans:property>

		<beans:property name="defaultViews">
			<beans:list>
				<!-- JSON View -->
				<beans:bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
				</beans:bean>

				<!-- JAXB XML View -->
			</beans:list>
		</beans:property>

	</beans:bean>

	<!-- If no extension matched, use JSP view -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="order" value="2" />
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Configure to plugin JSON as request and response in method handler -->
	<beans:bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>
	<context:component-scan base-package="com.siaam" />

</beans:beans>
