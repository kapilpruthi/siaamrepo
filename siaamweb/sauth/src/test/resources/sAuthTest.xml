<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task" 
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task.xsd">

    <!-- <context:property-placeholder location="classpath:sAuthTest.properties"/>-->

    <!-- Scans within the base package of the application for @Component classes to configure as beans -->
    <context:component-scan base-package="com.siaam" />
	<context:annotation-config />
	<import resource="classpath:siaam-token-mgmt.xml"/>
    <bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/siaamdb" />
		<property name="username" value="<Add>" />
		<property name="password" value="<Add>" />
	</bean>
	
	<bean id="customAuthenticationProvider" class="com.siaam.auth.handler.SiaamAuthenticationProvider" />
	<bean id="userDao" class="com.siaam.auth.dao.impl.UserDaoImpl"/>
	<bean id="userCredentialsDao" class="com.siaam.auth.dao.impl.UserCredentialsDaoImpl"/>
	<bean id="siaamUserSo" class="com.siaam.auth.service.impl.SiaamUserSOImpl"/>
	<bean id="siaamUserOperationsSO" class="com.siaam.auth.service.impl.SiaamUserOperationsSOImpl"/>

	<bean id="tokenService" class="com.siaam.auth.token.TokenService">
		<property name="tokenHandler" ref="rsaTokenHandler" />
		<property name="tokenConfigMap">
			<map>
				<entry key="authentication" value-ref="authTokenConfig" />
				<entry key="resetPwd" value-ref="resetPwdTokenConfig" />
			</map>
		</property>
	</bean>
	
	<bean id="resetPwdTokenConfig" class="com.siaam.auth.token.impl.rsa.RSATokenConfig">
		 <constructor-arg type="long" value="<Add>"/>
		 <constructor-arg type="java.lang.String" value="<Add>"/>
		 <constructor-arg type="java.lang.String" value="<Add>"/>
		 <constructor-arg type="java.lang.String" value="<Add>"/>
	</bean>
	
	<bean id="authTokenConfig" class="com.siaam.auth.token.impl.rsa.RSATokenConfig">
		 <constructor-arg type="long" value="<Add>"/>
		 <constructor-arg type="java.lang.String" value="<Add>"/>
		 <constructor-arg type="java.lang.String" value="<Add>"/>
		 <constructor-arg type="java.lang.String" value="<Add>"/>
	</bean>
	
	<!-- SET default mail properties -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com"/>
        <property name="port" value="587"/>
        <property name="username" value="<Add>"/>
        <property name="password" value="<Add>"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
    </bean>
     
    <!-- You can have some pre-configured messagess also which are ready to send -->
    <bean id="preConfiguredMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="to" value="kapil.pruthi@gmail.com"></property>
        <property name="from" value="kapil.pruthi@gmail.com"></property>
        <property name="subject" value="FATAL - Application crash. Check now!!"/>
    </bean>
</beans>